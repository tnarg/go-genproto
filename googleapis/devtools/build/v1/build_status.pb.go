// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: google/devtools/build/v1/build_status.proto

package build

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/gogo/protobuf/types"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The end result of the Build.
type BuildStatus_Result int32

const (
	// Unspecified or unknown.
	BuildStatus_UNKNOWN_STATUS BuildStatus_Result = 0
	// Build was successful and tests (if requested) all pass.
	BuildStatus_COMMAND_SUCCEEDED BuildStatus_Result = 1
	// Build error and/or test failure.
	BuildStatus_COMMAND_FAILED BuildStatus_Result = 2
	// Unable to obtain a result due to input provided by the user.
	BuildStatus_USER_ERROR BuildStatus_Result = 3
	// Unable to obtain a result due to a failure within the build system.
	BuildStatus_SYSTEM_ERROR BuildStatus_Result = 4
	// Build required too many resources, such as build tool RAM.
	BuildStatus_RESOURCE_EXHAUSTED BuildStatus_Result = 5
	// An invocation attempt time exceeded its deadline.
	BuildStatus_INVOCATION_DEADLINE_EXCEEDED BuildStatus_Result = 6
	// Build request time exceeded the request_deadline
	BuildStatus_REQUEST_DEADLINE_EXCEEDED BuildStatus_Result = 8
	// The build was cancelled by a call to CancelBuild.
	BuildStatus_CANCELLED BuildStatus_Result = 7
)

var BuildStatus_Result_name = map[int32]string{
	0: "UNKNOWN_STATUS",
	1: "COMMAND_SUCCEEDED",
	2: "COMMAND_FAILED",
	3: "USER_ERROR",
	4: "SYSTEM_ERROR",
	5: "RESOURCE_EXHAUSTED",
	6: "INVOCATION_DEADLINE_EXCEEDED",
	8: "REQUEST_DEADLINE_EXCEEDED",
	7: "CANCELLED",
}
var BuildStatus_Result_value = map[string]int32{
	"UNKNOWN_STATUS":               0,
	"COMMAND_SUCCEEDED":            1,
	"COMMAND_FAILED":               2,
	"USER_ERROR":                   3,
	"SYSTEM_ERROR":                 4,
	"RESOURCE_EXHAUSTED":           5,
	"INVOCATION_DEADLINE_EXCEEDED": 6,
	"REQUEST_DEADLINE_EXCEEDED":    8,
	"CANCELLED":                    7,
}

func (x BuildStatus_Result) String() string {
	return proto.EnumName(BuildStatus_Result_name, int32(x))
}
func (BuildStatus_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorBuildStatus, []int{0, 0}
}

// Status used for both invocation attempt and overall build completion.
type BuildStatus struct {
	// The end result.
	Result BuildStatus_Result `protobuf:"varint,1,opt,name=result,proto3,enum=google.devtools.build.v1.BuildStatus_Result" json:"result,omitempty"`
	// Fine-grained diagnostic information to complement the status.
	Details *google_protobuf1.Any `protobuf:"bytes,2,opt,name=details" json:"details,omitempty"`
}

func (m *BuildStatus) Reset()                    { *m = BuildStatus{} }
func (m *BuildStatus) String() string            { return proto.CompactTextString(m) }
func (*BuildStatus) ProtoMessage()               {}
func (*BuildStatus) Descriptor() ([]byte, []int) { return fileDescriptorBuildStatus, []int{0} }

func (m *BuildStatus) GetResult() BuildStatus_Result {
	if m != nil {
		return m.Result
	}
	return BuildStatus_UNKNOWN_STATUS
}

func (m *BuildStatus) GetDetails() *google_protobuf1.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

func init() {
	proto.RegisterType((*BuildStatus)(nil), "google.devtools.build.v1.BuildStatus")
	proto.RegisterEnum("google.devtools.build.v1.BuildStatus_Result", BuildStatus_Result_name, BuildStatus_Result_value)
}
func (m *BuildStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildStatus) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBuildStatus(dAtA, i, uint64(m.Result))
	}
	if m.Details != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBuildStatus(dAtA, i, uint64(m.Details.Size()))
		n1, err := m.Details.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	return i, nil
}

func encodeFixed64BuildStatus(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32BuildStatus(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintBuildStatus(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *BuildStatus) Size() (n int) {
	var l int
	_ = l
	if m.Result != 0 {
		n += 1 + sovBuildStatus(uint64(m.Result))
	}
	if m.Details != nil {
		l = m.Details.Size()
		n += 1 + l + sovBuildStatus(uint64(l))
	}
	return n
}

func sovBuildStatus(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozBuildStatus(x uint64) (n int) {
	return sovBuildStatus(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BuildStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBuildStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuildStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuildStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuildStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= (BuildStatus_Result(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Details", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuildStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBuildStatus
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Details == nil {
				m.Details = &google_protobuf1.Any{}
			}
			if err := m.Details.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBuildStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBuildStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBuildStatus(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBuildStatus
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBuildStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBuildStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthBuildStatus
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowBuildStatus
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipBuildStatus(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthBuildStatus = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBuildStatus   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("google/devtools/build/v1/build_status.proto", fileDescriptorBuildStatus)
}

var fileDescriptorBuildStatus = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0xab, 0xd3, 0x40,
	0x14, 0xc5, 0x9d, 0xaa, 0x79, 0x3a, 0x4f, 0x4b, 0x1c, 0x54, 0xfa, 0x1e, 0xb5, 0x94, 0xb7, 0x7a,
	0xa0, 0x4c, 0x68, 0x5d, 0x8a, 0x8b, 0x69, 0x66, 0xc4, 0x60, 0x3b, 0xa9, 0x33, 0x89, 0xff, 0x36,
	0x61, 0x6a, 0x63, 0x08, 0xc4, 0x4c, 0x69, 0x26, 0x85, 0xee, 0xfc, 0x78, 0x2e, 0x75, 0xe5, 0x56,
	0xfa, 0x29, 0x5c, 0x4a, 0xfe, 0x41, 0x41, 0xbb, 0x9b, 0xdc, 0xf3, 0x3b, 0xe7, 0x5e, 0x0e, 0x81,
	0x4f, 0x13, 0xad, 0x93, 0x2c, 0x76, 0xd6, 0xf1, 0xce, 0x68, 0x9d, 0x15, 0xce, 0xaa, 0x4c, 0xb3,
	0xb5, 0xb3, 0x9b, 0x34, 0x8f, 0xa8, 0x30, 0xca, 0x94, 0x05, 0xde, 0x6c, 0xb5, 0xd1, 0x68, 0xd0,
	0xc0, 0xb8, 0x83, 0x71, 0xcd, 0xe0, 0xdd, 0xe4, 0x72, 0xd8, 0xc6, 0xa8, 0x4d, 0xea, 0xa8, 0x3c,
	0xd7, 0x46, 0x99, 0x54, 0xe7, 0xad, 0xef, 0xf2, 0xa2, 0x55, 0xeb, 0xaf, 0x55, 0xf9, 0xc5, 0x51,
	0xf9, 0xbe, 0x91, 0xae, 0x7e, 0xf5, 0xe0, 0xf9, 0xac, 0x4a, 0x91, 0xf5, 0x22, 0x44, 0xa1, 0xb5,
	0x8d, 0x8b, 0x32, 0x33, 0x03, 0x30, 0x06, 0xd7, 0xfd, 0xe9, 0x33, 0x7c, 0x6a, 0x27, 0x3e, 0xb2,
	0x61, 0x51, 0x7b, 0x44, 0xeb, 0x45, 0x18, 0x9e, 0xad, 0x63, 0xa3, 0xd2, 0xac, 0x18, 0xf4, 0xc6,
	0xe0, 0xfa, 0x7c, 0xfa, 0xb0, 0x8b, 0xe9, 0x4e, 0xc0, 0x24, 0xdf, 0x8b, 0x0e, 0xba, 0xfa, 0x09,
	0xa0, 0xd5, 0x44, 0x20, 0x04, 0xfb, 0x21, 0x7f, 0xc3, 0xfd, 0xf7, 0x3c, 0x92, 0x01, 0x09, 0x42,
	0x69, 0xdf, 0x40, 0x8f, 0xe0, 0x03, 0xd7, 0x5f, 0x2c, 0x08, 0xa7, 0x91, 0x0c, 0x5d, 0x97, 0x31,
	0xca, 0xa8, 0x0d, 0x2a, 0xb4, 0x1b, 0xbf, 0x22, 0xde, 0x9c, 0x51, 0xbb, 0x87, 0xfa, 0x10, 0x86,
	0x92, 0x89, 0x88, 0x09, 0xe1, 0x0b, 0xfb, 0x26, 0xb2, 0xe1, 0x3d, 0xf9, 0x51, 0x06, 0x6c, 0xd1,
	0x4e, 0x6e, 0xa1, 0xc7, 0x10, 0x09, 0x26, 0xfd, 0x50, 0xb8, 0x2c, 0x62, 0x1f, 0x5e, 0x93, 0x50,
	0x06, 0x8c, 0xda, 0xb7, 0xd1, 0x18, 0x0e, 0x3d, 0xfe, 0xce, 0x77, 0x49, 0xe0, 0xf9, 0x3c, 0xa2,
	0x8c, 0xd0, 0xb9, 0xc7, 0x2b, 0xa4, 0xdd, 0x67, 0xa1, 0x27, 0xf0, 0x42, 0xb0, 0xb7, 0x21, 0x93,
	0xc1, 0x7f, 0xe4, 0x3b, 0xe8, 0x3e, 0xbc, 0xeb, 0x12, 0xee, 0xb2, 0x79, 0x75, 0xc9, 0xd9, 0xec,
	0x1b, 0xf8, 0x7e, 0x18, 0x81, 0x1f, 0x87, 0x11, 0xf8, 0x7d, 0x18, 0x01, 0x38, 0xfc, 0xac, 0xbf,
	0x9e, 0xec, 0x72, 0x66, 0x1f, 0x95, 0xb9, 0xac, 0x2a, 0x5a, 0x82, 0x4f, 0x2f, 0x5b, 0x3a, 0xd1,
	0x99, 0xca, 0x13, 0xac, 0xb7, 0x89, 0x93, 0xc4, 0x79, 0x5d, 0xa0, 0xd3, 0x48, 0x6a, 0x93, 0x16,
	0xff, 0xfe, 0x39, 0x2f, 0xea, 0xc7, 0x1f, 0x00, 0x56, 0x56, 0x0d, 0x3f, 0xff, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0x09, 0x3a, 0x2d, 0x48, 0x65, 0x02, 0x00, 0x00,
}
